/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

// TC - O(n)
// SC - O(h)

// We use in-order traversal to traverse nodes and validate
class ValidateBST {
    boolean flag;
    TreeNode prev;
    
    public boolean isValidBST(TreeNode root) {
        this.flag = true;
        bfs(root);
        return flag;
    }

    private void bfs(TreeNode root){
        if(root == null) return;

        bfs(root.left);

        if(prev != null && prev.val >= root.val){
            flag = false;
        }

        prev = root;
        bfs(root.right);
    }
}
